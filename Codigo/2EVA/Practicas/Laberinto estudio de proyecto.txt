Al empezar el juego aparecerá un menú con las siguientes opciones:

1.Jugar
2.Cambiar de dificultad
3.Salir

1= iniciaría el juego como tal
2= cada nivel de dificultad hará que aumente el numero de "muros" que el jugador no debe traspasar y los niveles serán Facil, medio y dificil
3= como su nombre indica, finalizará el programa


por lo tanto crearemos una funcion PintarMenú y mediante un switch elegiremos un metodo elegir dificultad o un metodo jugar
para el selector de dificultad tendremos que crear la funcion menuDificultad que mostrará el menú y devolverá la opcion elegida
para crear ambos menus crearemos los metodos pintarCentrado y pintarCentradoSinSalto, para pintar los menus en el centro de la pantalla


El juego consiste en mover una ficha por un laberinto de obstaculos hasta llegar a la meta dentro de un limite de tiempo
el metodo Jugar será el mas grande ya que es el mas complejo asique lo dividiremos en muchos metodos y/o funciones


-Metodo generarMapa:
para empezar generaremos un "mapa" aleatorio mediante una matriz de un tamaño determinado
ese "mapa" tendrá: 1 Jugador, 1 Meta y N muros, la cantidad de muros irá en funcion de la dificultad
si el tamaño del mapa es "TAM" en funcion de la dificultad se generarán "N" muros por ejemplo:
Facil= N=TAM/8
Medio= N=TAM/5
Dificil= N=TAM/3
Los muros se generarán de manera aleatoria en el mapa

-Metodo mostrarMapa:
es el metodo que va a mostrar constantemente lo que haya en la matriz de una forma determinada

-Metodo cambiarMapa:
una vez se muestre el mapa antes de empezar a jugar se le preguntará al usuario si quiere jugar ese mapa o no, si dice que no, el mapa cambiará, por lo que esté metodo y los dos anteriores deben ir en un bucle seguido de un "borrarPantalla"



-Metodo movimientoJugador:
esté metodo contendra el codigo necesario para mover la ficha del jugador, para el cual será necesario una función validarMovimiento

-Función validarMovimiento:
comprobará que hay en la posicion de la matriz a la que el usuario se quiere mover, y devolverá el valor que tiene esa posicion, ya que si
esa posicion contiene un espacio en blanco, el jugador podra moverse, si contiene un muro devolverá un valor que hará que salte una pantalla de GameOver 
y si en esa posicion está la meta devolverá un valor que haga que salte una pantalla de Victoria

-Metodo pantallaGameOver:
será la pantalla que salte si el jugador se da contra un muro o si se acaba el tiempo

-Metodo pantallaVictoria:
será la pantalla que salte si el jugador llega a la meta, en esa pantalla aparecerá el tiempo transcurrido

-Funcion cuentaRegresiva:
aparecerá una barra de progreso que indicará el tiempo maximo que tienes para llegar a la meta y si llega a la meta devolverá un valor que hará que el juego termine



