package data;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */


import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.Writer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 * Crea un panel capaz de recibir Strings de HTMLs y los pinta por pantalla
 * @author Nacho
 */
public class PanelEditorDeTextoHTML extends javax.swing.JPanel {


    /**
     * Crea un panel Con un titulo y un cuadro de texto no editable
     * en el que se pondrá el texto recibido en formato HTML
     * @param texto  Texto en HTML que quieres mostrar
     */
    public PanelEditorDeTextoHTML( String texto) {
        initComponents();
        modificarPanel(texto, false);
    }
    /**
     * Crea un panel Con un titulo y un cuadro de texto editable
     * en el que se pondrá el texto recibido en formato HTML
     * @param texto  Texto en HTML que quieres mostrar
     * @param editable Si lo pones en true podras editar el texto
     */
    public PanelEditorDeTextoHTML(String texto, Boolean editable) {
        initComponents();
        modificarPanel(texto,editable);
    }


    
    private void modificarPanel(String texto, Boolean editable){
        
        cuadroTexto.setContentType("text/html");
        
        if(texto==null || "".equals(texto))
            agregarCabeceraHtml();
        
        if (texto!=null)
            this.cuadroTexto.setText(texto);
        
        this.cuadroTexto.setEditable(editable);
        
        funcionalidadBotones();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        cuadroTexto = new javax.swing.JTextPane();
        botonGuardar = new JButton("Guardar");

        setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(54, 54, 54));
        jPanel1.setForeground(new java.awt.Color(204, 204, 204));

        jPanel1.add(botonGuardar);
        
        add(jPanel1, java.awt.BorderLayout.NORTH);
        

        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 20, 20, 20));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setViewportView(cuadroTexto);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        add(jPanel2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane cuadroTexto;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private JButton botonGuardar;
    // End of variables declaration//GEN-END:variables

    private void agregarCabeceraHtml() {
        cuadroTexto.setText("<HTML>");
    }

    /**
     * Te pide elegir una carpeta, luego te pregunta un nombre de archivo,
     * te crear un archivo.html en esa carpeta y le añade el contenido
     * del cuadro de texto
     */
    private void funcionalidadBotones() {
        
        botonGuardar.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                //eliges la ruta del archivo
                File carpeta= new File(elegirRuta()); 
                //te pide el nombre del archivo
                String nombreArchivo=JOptionPane.showInputDialog(null,"Elige un nombre para el archivo");
                //crea el archivo en esa carpeta
                File archivo= new File(carpeta,nombreArchivo+".HTML");
                //escribe en el archivo
                try (Writer writer = new BufferedWriter(new FileWriter(archivo))) {
                      writer.write(PanelEditorDeTextoHTML.this.cuadroTexto.getText());
                } catch (IOException ex) {
                      JOptionPane.showMessageDialog(PanelEditorDeTextoHTML.this, "No se ha podido escribir el archivo");
                }
            }

        private String elegirRuta() {
            // Crear una instancia de JFileChooser
            JFileChooser selectorDeCarpeta = new JFileChooser();

            // Configurar el JFileChooser para seleccionar directorios
            selectorDeCarpeta.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            

            // Mostrar el diálogo para seleccionar un archivo
            int returnValue = selectorDeCarpeta.showOpenDialog(null);

            // Comprobar si se seleccionó un archivo
            if (returnValue == JFileChooser.APPROVE_OPTION) {
                File selectedFile = selectorDeCarpeta.getSelectedFile();
                return selectedFile.getAbsolutePath();
            } else {
                return null;
            }
                }
        });
    }
    
    
}
